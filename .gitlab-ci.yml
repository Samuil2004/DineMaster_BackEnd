# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.

#every time I run gradle it will start an application at the background
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  API_KEY_GEOAPIFY: "${API_KEY_GEOAPIFY}"


stages:
  - build
  - test
  - sonarqube
  - docker



#the first stage, where it is described.
build:
  stage: build
  script:
    - chmod +x ./gradlew
    - echo "API_KEY_GEOAPIFY is set"
    - ./gradlew assemble


#the second stage, where it is described.
test:
  stage: test
  script:
    - chmod +x ./gradlew
    - ./gradlew test


sonarqube:
  stage: sonarqube
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ./gradlew clean test jacocoTestReport
    - ./gradlew sonar -Dsonar.host.url="http://localhost:9000" -Dsonar.login="sqp_deb86bf4e2ba7c1f8c861f0ad42b34a6f8c39777" -Dsonar.qualitygate.wait=true
  allow_failure: false


docker:
  stage: docker
  script:
    - chmod +x ./gradlew
    - ./gradlew assemble
    - docker stop dinemasterpro_container || true  # Stop container if it's running (otherwise, the process will fail)
    - docker rm dinemasterpro_container || true  # Remove the container if it exists (otherwise, the process will fail)
    - docker rmi dinemasterpro || true  # Remove the image if it exists (otherwise, the process will fail)
    - docker build -t dinemasterpro .
    - docker run -d -p 8090:8080 --net=flyway_dineMaster_network_staging --env spring_profiles_active=staging --name=dinemasterpro_container dinemasterpro
